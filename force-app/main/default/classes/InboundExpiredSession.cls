/**
 * @description       : Model for inbound expired session information
 * @author            : Obidjon
 * @group             : Kakao Consult Chat
 * @last modified on  : 04-23-2021
 * @last modified by  : Obidjon
 * Modifications Log
 * Ver   Date         Author    Modification
 * 1.0   04-07-2021   Obidjon   Initial Version
 **/
//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are not valid in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

@SuppressWarnings('PMD.VariableNamingConventions')
public class InboundExpiredSession {
    public String user_key { get; set; }
    public String sender_key { get; set; }
    public String session_id { get; set; }

    public InboundExpiredSession(JSONParser parser) {
        while (parser.nextToken() != System.JSONToken.END_OBJECT) {
            if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
                String text = parser.getText();
                if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
                    if (text == 'user_key') {
                        user_key = parser.getText();
                    } else if (text == 'sender_key') {
                        sender_key = parser.getText();
                    } else if (text == 'session_id') {
                        session_id = parser.getText();
                    } else {
                        System.debug(
                            LoggingLevel.WARN,
                            'InboundExpiredSession consuming unrecognized property: ' + text
                        );
                        consumeObject(parser);
                    }
                }
            }
        }
    }

    public static InboundExpiredSession parse(String json) {
        System.JSONParser parser = System.JSON.createParser(json);
        return new InboundExpiredSession(parser);
    }

    public static void consumeObject(System.JSONParser parser) {
        Integer depth = 0;
        do {
            System.JSONToken curr = parser.getCurrentToken();
            if (curr == System.JSONToken.START_OBJECT || curr == System.JSONToken.START_ARRAY) {
                depth++;
            } else if (curr == System.JSONToken.END_OBJECT || curr == System.JSONToken.END_ARRAY) {
                depth--;
            }
        } while (depth > 0 && parser.nextToken() != null);
    }
}